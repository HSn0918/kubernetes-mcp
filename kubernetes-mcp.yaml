apiVersion: v1
kind: Namespace
metadata:
  name: mcp-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-mcp-sa
  namespace: mcp-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubernetes-mcp-role
  namespace: mcp-system
rules:
  - apiGroups: [""]
    resources:
      - pods
      - services
      - configmaps
      - secrets
      - persistentvolumeclaims
      - serviceaccounts
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources:
      - deployments
      - statefulsets
      - daemonsets
      - replicasets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubernetes-mcp-rolebinding
  namespace: mcp-system
subjects:
  - kind: ServiceAccount
    name: kubernetes-mcp-sa
    namespace: mcp-system
roleRef:
  kind: Role
  name: kubernetes-mcp-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-mcp-namespace-lister
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-mcp-lister-clusterbinding
subjects:
  - kind: ServiceAccount
    name: kubernetes-mcp-sa
    namespace: mcp-system
roleRef:
  kind: ClusterRole
  name: kubernetes-mcp-namespace-lister
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-mcp-deployment
  namespace: mcp-system
  labels:
    app: kubernetes-mcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-mcp
  template:
    metadata:
      labels:
        app: kubernetes-mcp
    spec:
      serviceAccountName: kubernetes-mcp-sa
      containers:
        - name: kubernetes-mcp-container
          image: hsn0918/kubernetes-mcp:latest
          imagePullPolicy: Always
          command: ["/app/kubernetes-mcp"]
          args:
            - "server"
            - "--transport=sse"
            - "--port=8080"
            - "--health-port=8081"
            - "--log-level=info"
            - "--log-format=console"
          ports:
            - name: http-sse
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 8081
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-health
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: http-health
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-mcp-service
  namespace: mcp-system
  labels:
    app: kubernetes-mcp
spec:
  selector:
    app: kubernetes-mcp
  ports:
    - name: http-sse
      protocol: TCP
      port: 8080
      targetPort: http-sse
  type: ClusterIP
